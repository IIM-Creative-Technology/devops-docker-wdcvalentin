[{"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\index.js":"1","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\reportWebVitals.js":"2","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\App.js":"3","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\pages\\Error.jsx":"4","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\pages\\QuizzPage.jsx":"5","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\pages\\Home.jsx":"6","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\organisms\\home\\Content.jsx":"7","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\organisms\\home\\Header.jsx":"8","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\organisms\\Quizz.jsx":"9","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\atoms\\quizz\\Question.jsx":"10","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\atoms\\quizz\\Answer.jsx":"11","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\molecules\\home\\ContentLeft.jsx":"12"},{"size":517,"mtime":1612556984814,"results":"13","hashOfConfig":"14"},{"size":375,"mtime":1612357699081,"results":"15","hashOfConfig":"14"},{"size":481,"mtime":1612623126167,"results":"16","hashOfConfig":"14"},{"size":181,"mtime":1612386054963,"results":"17","hashOfConfig":"14"},{"size":787,"mtime":1612623126171,"results":"18","hashOfConfig":"14"},{"size":212,"mtime":1612622651273,"results":"19","hashOfConfig":"14"},{"size":574,"mtime":1612626381167,"results":"20","hashOfConfig":"14"},{"size":233,"mtime":1612622569570,"results":"21","hashOfConfig":"14"},{"size":2751,"mtime":1612622569562,"results":"22","hashOfConfig":"14"},{"size":80,"mtime":1612622569553,"results":"23","hashOfConfig":"14"},{"size":163,"mtime":1612622569626,"results":"24","hashOfConfig":"14"},{"size":493,"mtime":1612627498067,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"e2y676",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\index.js",[],["52","53"],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\reportWebVitals.js",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\App.js",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\pages\\Error.jsx",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\pages\\QuizzPage.jsx",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\pages\\Home.jsx",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\organisms\\home\\Content.jsx",["54","55"],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\organisms\\home\\Header.jsx",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\organisms\\Quizz.jsx",["56"],"import React, { useEffect, useState } from \"react\";\r\nimport { Answer } from \"../atoms/quizz/Answer\";\r\nimport { Question } from \"../atoms/quizz/Question\";\r\nconst Quizz = ({ theme }) => {\r\n  const [quizData, setQuizData] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [indexQuestion, setIndexQuestion] = useState(0);\r\n  const [end, setEnd] = useState(false);\r\n  const [endComment, setEndComment] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    getJson(theme);\r\n  }, [quizData]);\r\n\r\n  const answering = isCorrect => {\r\n    nextQuestion(score);\r\n    incrementScore(isCorrect);\r\n  };\r\n\r\n  const incrementScore = isCorrect =>\r\n    isCorrect && setScore(prevScore => prevScore + 1);\r\n\r\n  const nextQuestion = () => {\r\n    if (indexQuestion + 1 < quizData.length) {\r\n      setIndexQuestion(prevIndex => prevIndex + 1);\r\n    } else {\r\n      isFinish(score);\r\n    }\r\n  };\r\n\r\n  const isFinish = score => {\r\n    setEnd(true);\r\n    if (score === 10) {\r\n      return setEndComment(\"Parfait\");\r\n    } else if (score >= 5) {\r\n      return setEndComment(\"Super mais tu peux mieux faire !\");\r\n    } else if (score < 5) {\r\n      return setEndComment(\"Retourne réviser\");\r\n    }\r\n  };\r\n\r\n  const getJson = async theme => {\r\n    try {\r\n      switch (theme) {\r\n        case \"history\":\r\n          return await import(\"../quizz/quizz_history.json\").then(quiz => {\r\n            setQuizData(quiz.default);\r\n          });\r\n        case \"insolite\":\r\n          return await import(\"../quizz/quizz_insolite.json\").then(quiz => {\r\n            setQuizData(quiz.default);\r\n          });\r\n        case \"manga\":\r\n          return await import(\"../quizz/quizz_manga.json\").then(quiz => {\r\n            setQuizData(quiz.default);\r\n          });\r\n        case \"geo\":\r\n          return await import(\"../quizz/quizz_geo.json\").then(quiz => {\r\n            setQuizData(quiz.default);\r\n          });\r\n        default:\r\n          break;\r\n      }\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {end === true ? (\r\n        <div>\r\n          <h1>{endComment}</h1>\r\n          <h4> score : {score} / 10 </h4>\r\n          <button onClick={() => (window.location = \"/quizz\")}>\r\n            Retour au Menu\r\n          </button>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <h4>{score} / 10</h4>\r\n          <div>\r\n            {quizData && (\r\n              <Question question={quizData[indexQuestion].question} />\r\n            )}\r\n            {quizData &&\r\n              quizData[indexQuestion].answers.map((answer, index) => (\r\n                <Answer answer={answer} index={index} answering={answering} />\r\n              ))}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default React.memo(Quizz);\r\n","C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\atoms\\quizz\\Question.jsx",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\atoms\\quizz\\Answer.jsx",[],"C:\\Users\\melod\\Documents\\GitHub\\react-wdcvalentin\\src\\molecules\\home\\ContentLeft.jsx",["57"],{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":12,"column":9,"nodeType":"64","endLine":12,"endColumn":78},{"ruleId":"62","severity":1,"message":"63","line":15,"column":9,"nodeType":"64","endLine":15,"endColumn":81},{"ruleId":"65","severity":1,"message":"66","line":13,"column":6,"nodeType":"67","endLine":13,"endColumn":16,"suggestions":"68"},{"ruleId":"69","severity":1,"message":"70","line":2,"column":10,"nodeType":"71","messageId":"72","endLine":2,"endColumn":17},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'theme'. Either include it or remove the dependency array.","ArrayExpression",["75"],"no-unused-vars","'NavLink' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},"Update the dependencies array to be: [quizData, theme]",{"range":"78","text":"79"},[482,492],"[quizData, theme]"]